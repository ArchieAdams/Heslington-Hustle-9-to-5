name: Tests
run-name: ${{ github.actor }} is testing out the Lastest push ðŸš€
on: [ push, pull_request ]
jobs:
  Gradle-Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate gradle
        uses: gradle/wrapper-validation-action@v2

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle
        run: ./gradlew dist --build-cache

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: desktop/build/libs

  Checkstyle-Google-Style:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Setup
        run: echo "FAIL=false" >> $GITHUB_ENV

      - name: Checkstyle
        run: |
          # Run Checkstyle for main, desktop, and test code
          ./gradlew checkstyleMain
          ./gradlew checkstyleTest

      - name: Parse Checkstyle Reports
        run: |
          # Extract the number of <tr> elements (violations) from the HTML reports
          violations_core=$(grep -o '<tr>' core/build/reports/checkstyle/main.html | wc -l)
          violations_desktop=$(grep -o '<tr>' desktop/build/reports/checkstyle/main.html | wc -l)
          violations_tests=$(grep -o '<tr>' tests/build/reports/checkstyle/main.html | wc -l)
          
          echo "VIOLATIONS_CORE=$violations_core" >> $GITHUB_ENV
          echo "VIOLATIONS_DESKTOP=$violations_desktop" >> $GITHUB_ENV
          echo "VIOLATIONS_TESTS=$violations_tests" >> $GITHUB_ENV

      - name: Check for Violations
        run: |
          threshold=2
          violations_core=${{ env.VIOLATIONS_CORE }}
          violations_desktop=${{ env.VIOLATIONS_DESKTOP }}
          violations_tests=${{ env.VIOLATIONS_TESTS }}
          
          if [ $violations_core -gt $threshold ] || [ $violations_desktop -gt $threshold ] || [ $violations_tests -gt $threshold ]; then
            echo "Checkstyle violations found. One or more violations exceed the threshold of $threshold"
            echo "FAIL=true" >> $GITHUB_ENV
          fi
      - name: Rename Main Checkstyle Reports
        run: |
          mv core/build/reports/checkstyle/main.html core/build/reports/checkstyle/core_main.html
          mv desktop/build/reports/checkstyle/main.html desktop/build/reports/checkstyle/desktop_main.html
          if [ -f tests/build/reports/checkstyle/main.html ]; then
            mv tests/build/reports/checkstyle/main.html tests/build/reports/checkstyle/tests_main.html
          fi

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: Checkstyle Reports
          path: |
            core/build/reports/checkstyle/core_main.html
            desktop/build/reports/checkstyle/desktop_main.html
            tests/build/reports/checkstyle/tests_main.html

      - name: Check If Failed
        run: | 
          if ${{ env.FAIL }}; then
          echo "Checkstyle failed"
          exit 1
          fi

  Tests:
    runs-on: ubuntu-latest
    needs: [ Gradle-Build ]
    if: ${{ needs.Gradle-Build.result == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Test Movement
        run: ./gradlew test -Dtest.useTestCache=true

      - name: Test Report
        uses: actions/upload-artifact@v4
        with:
          name: Test Report & Coverage
          path: tests/build/reports/

  Movement-Tests:
    runs-on: ubuntu-latest
    needs: [ Tests ]
    if: ${{ needs.Tests.result == 'failure' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Test Movement
        run: ./gradlew test --tests "MovementTests" -Dtest.useTestCache=true


  Activity-Tests:
    runs-on: ubuntu-latest
    needs: [ Tests ]
    if: ${{ needs.Tests.result == 'failure' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Test Activity
        run: ./gradlew test --tests "ActivityTileTests" -Dtest.useTestCache=true
  
  Game-State-Energy-Test-Test:
    runs-on: ubuntu-latest
    needs: [ Tests ]
    if: ${{ needs.Tests.result == 'failure' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64
          cache: 'gradle'

      - name: Test Movement
        run: ./gradlew test --tests "GameStateEnergy" -Dtest.useTestCache=true

  Game-State-Time-Test-Test:
    runs-on: ubuntu-latest
    needs: [ Tests ]
    if: ${{ needs.Tests.result == 'failure' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64
          cache: 'gradle'

      - name: Test Movement
        run: ./gradlew test --tests "GameStateEnergy" -Dtest.useTestCache=true

  Asset-Tests:
    runs-on: ubuntu-latest
    needs: [ Tests ]
    if: ${{ needs.Tests.result == 'failure' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Test Assets
        run: ./gradlew test --tests "AssetTests" -Dtest.useTestCache=true

  

